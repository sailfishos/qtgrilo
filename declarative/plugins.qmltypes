import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable org.nemomobile.grilo 0.1'

Module {
    dependencies: []
    Component {
        name: "DeclarativeGriloModel"
        prototype: "GriloModel"
        exports: ["org.nemomobile.grilo/GriloModel 0.1"]
        exportMetaObjectRevisions: [0]
        Method {
            name: "get"
            type: "QObject*"
            Parameter { name: "rowIndex"; type: "int" }
        }
    }
    Component {
        name: "GriloBrowse"
        prototype: "GriloDataSource"
        exports: ["org.nemomobile.grilo/GriloBrowse 0.1"]
        exportMetaObjectRevisions: [0]
        Property { name: "source"; type: "string" }
        Property { name: "supportedKeys"; type: "QVariantList"; isReadonly: true }
        Property { name: "slowKeys"; type: "QVariantList"; isReadonly: true }
        Property { name: "available"; type: "bool"; isReadonly: true }
        Property { name: "baseMedia"; type: "string" }
        Signal { name: "availabilityChanged" }
    }
    Component {
        name: "GriloDataSource"
        prototype: "QObject"
        Enum {
            name: "MetadataKeys"
            values: {
                "Album": 1,
                "Artist": 2,
                "Author": 3,
                "Bitrate": 4,
                "Certificate": 5,
                "Childcount": 6,
                "PublicationDate": 7,
                "Description": 8,
                "Duration": 9,
                "ExternalPlayer": 10,
                "ExternalUrl": 11,
                "Framerate": 12,
                "Genre": 13,
                "Height": 14,
                "Id": 15,
                "LastPlayed": 16,
                "LastPosition": 17,
                "License": 18,
                "Lyrics": 19,
                "Mime": 20,
                "PlayCount": 21,
                "Rating": 22,
                "Site": 23,
                "Source": 24,
                "Studio": 25,
                "Thumbnail": 26,
                "ThumbnailBinary": 27,
                "Title": 28,
                "Url": 29,
                "Width": 30,
                "Season": 31,
                "Episode": 32,
                "Show": 33,
                "CreationDate": 34,
                "CameraModel": 35,
                "Orientation": 36,
                "FlashUsed": 37,
                "ExposureTime": 38,
                "IsoSpeed": 39,
                "TrackNumber": 40,
                "ModificationDate": 41,
                "StartTime": 42
            }
        }
        Enum {
            name: "TypeFilter"
            values: {
                "None": 0,
                "Audio": 1,
                "Video": 2,
                "Image": 4,
                "All": 7
            }
        }
        Property { name: "registry"; type: "GriloRegistry"; isPointer: true }
        Property { name: "count"; type: "int" }
        Property { name: "skip"; type: "int" }
        Property { name: "metadataKeys"; type: "QVariantList" }
        Property { name: "typeFilter"; type: "QVariantList" }
        Signal { name: "finished" }
        Signal { name: "contentUpdated" }
        Method { name: "cancelRefresh" }
        Method { name: "availableSourcesChanged" }
        Method { name: "refresh"; type: "bool" }
    }
    Component {
        name: "GriloMedia"
        prototype: "QObject"
        exports: ["org.nemomobile.grilo/GriloMedia 0.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "id"; type: "string"; isReadonly: true }
        Property { name: "title"; type: "string"; isReadonly: true }
        Property { name: "url"; type: "QUrl"; isReadonly: true }
        Property { name: "container"; type: "bool"; isReadonly: true }
        Property { name: "duration"; type: "int"; isReadonly: true }
        Property { name: "author"; type: "string"; isReadonly: true }
        Property { name: "album"; type: "string"; isReadonly: true }
        Property { name: "artist"; type: "string"; isReadonly: true }
        Property { name: "genre"; type: "string"; isReadonly: true }
        Property { name: "thumbnail"; type: "QUrl"; isReadonly: true }
        Property { name: "year"; type: "int"; isReadonly: true }
        Property { name: "trackNumber"; type: "int"; isReadonly: true }
        Property { name: "childCount"; type: "int"; isReadonly: true }
        Property { name: "mimeType"; type: "string"; isReadonly: true }
        Property { name: "modificationDate"; type: "QDateTime"; isReadonly: true }
        Property { name: "height"; type: "int"; isReadonly: true }
        Property { name: "orientation"; type: "int"; isReadonly: true }
        Property { name: "width"; type: "int"; isReadonly: true }
        Method {
            name: "get"
            type: "QVariant"
            Parameter { name: "keyId"; type: "string" }
        }
        Method {
            name: "get"
            type: "QVariant"
            Parameter { name: "keyId"; type: "uint" }
        }
        Method { name: "serialize"; type: "string" }
    }
    Component {
        name: "GriloModel"
        prototype: "QAbstractListModel"
        Property { name: "source"; type: "GriloDataSource"; isPointer: true }
        Property { name: "count"; type: "int"; isReadonly: true }
    }
    Component {
        name: "GriloQuery"
        prototype: "GriloDataSource"
        exports: ["org.nemomobile.grilo/GriloQuery 0.1"]
        exportMetaObjectRevisions: [0]
        Property { name: "source"; type: "string" }
        Property { name: "query"; type: "string" }
        Property { name: "supportedKeys"; type: "QVariantList"; isReadonly: true }
        Property { name: "slowKeys"; type: "QVariantList"; isReadonly: true }
        Property { name: "available"; type: "bool"; isReadonly: true }
        Signal { name: "availabilityChanged" }
    }
    Component {
        name: "GriloRegistry"
        prototype: "QObject"
        exports: ["org.nemomobile.grilo/GriloRegistry 0.1"]
        exportMetaObjectRevisions: [0]
        Property { name: "availableSources"; type: "QStringList"; isReadonly: true }
        Property { name: "configurationFile"; type: "string" }
        Signal {
            name: "contentChanged"
            Parameter { name: "source"; type: "string" }
            Parameter { name: "change_type"; type: "GrlSourceChangeType" }
            Parameter { name: "changed_media"; type: "GPtrArray"; isPointer: true }
        }
        Method { name: "loadAll"; type: "bool" }
        Method {
            name: "loadPluginById"
            type: "bool"
            Parameter { name: "pluginId"; type: "string" }
        }
    }
    Component {
        name: "GriloSearch"
        prototype: "GriloDataSource"
        exports: ["org.nemomobile.grilo/GriloSearch 0.1"]
        exportMetaObjectRevisions: [0]
        Property { name: "source"; type: "string" }
        Property { name: "text"; type: "string" }
        Property { name: "supportedKeys"; type: "QVariantList"; isReadonly: true }
        Property { name: "slowKeys"; type: "QVariantList"; isReadonly: true }
        Property { name: "available"; type: "bool"; isReadonly: true }
        Signal { name: "availabilityChanged" }
    }
    Component {
        name: "QAbstractItemModel"
        prototype: "QObject"
        Enum {
            name: "LayoutChangeHint"
            values: {
                "NoLayoutChangeHint": 0,
                "VerticalSortHint": 1,
                "HorizontalSortHint": 2
            }
        }
        Signal {
            name: "dataChanged"
            Parameter { name: "topLeft"; type: "QModelIndex" }
            Parameter { name: "bottomRight"; type: "QModelIndex" }
            Parameter { name: "roles"; type: "QVector<int>" }
        }
        Signal {
            name: "dataChanged"
            Parameter { name: "topLeft"; type: "QModelIndex" }
            Parameter { name: "bottomRight"; type: "QModelIndex" }
        }
        Signal {
            name: "headerDataChanged"
            Parameter { name: "orientation"; type: "Qt::Orientation" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "layoutChanged"
            Parameter { name: "parents"; type: "QList<QPersistentModelIndex>" }
            Parameter { name: "hint"; type: "QAbstractItemModel::LayoutChangeHint" }
        }
        Signal {
            name: "layoutChanged"
            Parameter { name: "parents"; type: "QList<QPersistentModelIndex>" }
        }
        Signal { name: "layoutChanged" }
        Signal {
            name: "layoutAboutToBeChanged"
            Parameter { name: "parents"; type: "QList<QPersistentModelIndex>" }
            Parameter { name: "hint"; type: "QAbstractItemModel::LayoutChangeHint" }
        }
        Signal {
            name: "layoutAboutToBeChanged"
            Parameter { name: "parents"; type: "QList<QPersistentModelIndex>" }
        }
        Signal { name: "layoutAboutToBeChanged" }
        Signal {
            name: "rowsAboutToBeInserted"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "rowsInserted"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "rowsAboutToBeRemoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "rowsRemoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "columnsAboutToBeInserted"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "columnsInserted"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "columnsAboutToBeRemoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "columnsRemoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal { name: "modelAboutToBeReset" }
        Signal { name: "modelReset" }
        Signal {
            name: "rowsAboutToBeMoved"
            Parameter { name: "sourceParent"; type: "QModelIndex" }
            Parameter { name: "sourceStart"; type: "int" }
            Parameter { name: "sourceEnd"; type: "int" }
            Parameter { name: "destinationParent"; type: "QModelIndex" }
            Parameter { name: "destinationRow"; type: "int" }
        }
        Signal {
            name: "rowsMoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "start"; type: "int" }
            Parameter { name: "end"; type: "int" }
            Parameter { name: "destination"; type: "QModelIndex" }
            Parameter { name: "row"; type: "int" }
        }
        Signal {
            name: "columnsAboutToBeMoved"
            Parameter { name: "sourceParent"; type: "QModelIndex" }
            Parameter { name: "sourceStart"; type: "int" }
            Parameter { name: "sourceEnd"; type: "int" }
            Parameter { name: "destinationParent"; type: "QModelIndex" }
            Parameter { name: "destinationColumn"; type: "int" }
        }
        Signal {
            name: "columnsMoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "start"; type: "int" }
            Parameter { name: "end"; type: "int" }
            Parameter { name: "destination"; type: "QModelIndex" }
            Parameter { name: "column"; type: "int" }
        }
        Method { name: "submit"; type: "bool" }
        Method { name: "revert" }
        Method {
            name: "hasIndex"
            type: "bool"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method {
            name: "hasIndex"
            type: "bool"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
        }
        Method {
            name: "index"
            type: "QModelIndex"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method {
            name: "index"
            type: "QModelIndex"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
        }
        Method {
            name: "parent"
            type: "QModelIndex"
            Parameter { name: "child"; type: "QModelIndex" }
        }
        Method {
            name: "sibling"
            type: "QModelIndex"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
            Parameter { name: "idx"; type: "QModelIndex" }
        }
        Method {
            name: "rowCount"
            type: "int"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method { name: "rowCount"; type: "int" }
        Method {
            name: "columnCount"
            type: "int"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method { name: "columnCount"; type: "int" }
        Method {
            name: "hasChildren"
            type: "bool"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method { name: "hasChildren"; type: "bool" }
        Method {
            name: "data"
            type: "QVariant"
            Parameter { name: "index"; type: "QModelIndex" }
            Parameter { name: "role"; type: "int" }
        }
        Method {
            name: "data"
            type: "QVariant"
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "setData"
            type: "bool"
            Parameter { name: "index"; type: "QModelIndex" }
            Parameter { name: "value"; type: "QVariant" }
            Parameter { name: "role"; type: "int" }
        }
        Method {
            name: "setData"
            type: "bool"
            Parameter { name: "index"; type: "QModelIndex" }
            Parameter { name: "value"; type: "QVariant" }
        }
        Method {
            name: "headerData"
            type: "QVariant"
            Parameter { name: "section"; type: "int" }
            Parameter { name: "orientation"; type: "Qt::Orientation" }
            Parameter { name: "role"; type: "int" }
        }
        Method {
            name: "headerData"
            type: "QVariant"
            Parameter { name: "section"; type: "int" }
            Parameter { name: "orientation"; type: "Qt::Orientation" }
        }
        Method {
            name: "fetchMore"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method {
            name: "canFetchMore"
            type: "bool"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method {
            name: "flags"
            type: "Qt::ItemFlags"
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "match"
            type: "QModelIndexList"
            Parameter { name: "start"; type: "QModelIndex" }
            Parameter { name: "role"; type: "int" }
            Parameter { name: "value"; type: "QVariant" }
            Parameter { name: "hits"; type: "int" }
            Parameter { name: "flags"; type: "Qt::MatchFlags" }
        }
        Method {
            name: "match"
            type: "QModelIndexList"
            Parameter { name: "start"; type: "QModelIndex" }
            Parameter { name: "role"; type: "int" }
            Parameter { name: "value"; type: "QVariant" }
            Parameter { name: "hits"; type: "int" }
        }
        Method {
            name: "match"
            type: "QModelIndexList"
            Parameter { name: "start"; type: "QModelIndex" }
            Parameter { name: "role"; type: "int" }
            Parameter { name: "value"; type: "QVariant" }
        }
    }
    Component { name: "QAbstractListModel"; prototype: "QAbstractItemModel" }
}
